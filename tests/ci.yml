.snippets:
  ghdl_docker_setup:
    - apt update
    - apt install -y build-essential wget git ca-certificates
    - wget -O Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
    - bash Miniforge3.sh -b -p "${HOME}/conda"
    - source "${HOME}/conda/etc/profile.d/mamba.sh"
    - mamba activate
  before_script:
    - git clone --depth 1 --branch v3.12.0 https://github.com/nlohmann/json.git
    - export JSON_ROOT=$(pwd)/json/single_include/
    - git clone --depth 1 https://github.com/Xilinx/HLS_arbitrary_Precision_Types.git
    - export XILINX_AP_INCLUDE=$(pwd)/HLS_arbitrary_Precision_Types/include
    - pip install -r dev_requirements.txt
    - pip install .

.pytest:
  stage: test
  script:
    - cd tests
    - pytest $PYTESTFILE -rA
  artifacts:
    when: always
    paths:
      - tests/prj*

.pytest-plain:
  extends: .pytest
  image: ghdl/ghdl:6.0.0-dev-gcc-ubuntu-22.04
  tags:
    - k8s-default
  before_script:
    - !reference [.snippets, ghdl_docker_setup]
    - !reference [.snippets, before_script]

.pytest-fpga:
  extends: .pytest
  image: registry.cern.ch/ci4fpga/vivado:2024.1
  tags:
    - fpga-mid
  before_script:
    - !reference [.snippets, before_script]